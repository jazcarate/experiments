plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.4.10'
    id 'org.jetbrains.dokka' version '1.4.10'
}

group 'ar.com.florius'
version '1.0-SNAPSHOT'

//noinspection GroovyUnusedAssignment
sourceCompatibility = 1.8

allprojects {
    repositories {
        jcenter()
    }
}

subprojects {
    version = '1.0'
}


task stage(dependsOn: [':server:stage'])

test {
    useJUnitPlatform()
}

configure([compileKotlin, compileTestKotlin]) {
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs = ["-Xinline-classes"]
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'io.arrow-kt:arrow-core:0.11.0'
    implementation 'io.arrow-kt:arrow-syntax:0.11.0'
    testImplementation 'io.kotest:kotest-runner-junit5-jvm:4.2.5'
    testImplementation 'io.kotest:kotest-assertions-core-jvm:4.2.5'
    testImplementation 'io.kotest:kotest-assertions-arrow-jvm:4.2.5'
}


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.named("dokkaHtml") {
    moduleName.set("koncierge")
    dokkaSourceSets {
        configureEach {
            includeNonPublic.set(false)
            skipEmptyPackages.set(true)

            includes.from("module.md")
            sourceRoot.from(file("src"))

            sourceLink {
                // Unix based directory relative path to the root of the project (where you execute gradle respectively).
                localDirectory.set(file("src/main/kotlin"))

                // URL showing where the source code can be accessed through the web browser
                remoteUrl.set(java.net.URL(
                        "https://github.com/cy6erGn0m/vertx3-lang-kotlin/blob/master/src/main/kotlin"))
                // Suffix which is used to append the line number to the URL. Use #L for GitHub
                remoteLineSuffix.set("#L")
            }
        }
    }
}